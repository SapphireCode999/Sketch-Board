{"version":3,"sources":["components/sketch/Sketch.jsx","App.js","index.js"],"names":["Sketch","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","selectedColor","setSelectedColor","brushSize","setBrushSize","useEffect","context","current","getContext","lineCap","lineJoin","strokeStyle","lineWidth","finishDrawing","closePath","draw","nativeEvent","offsetX","offsetY","lineTo","stroke","downloadCanvas","a","image","toDataURL","fetch","blob","blobURL","URL","createObjectURL","link","document","createElement","href","download","click","className","ref","style","borderRadius","width","height","onMouseDown","beginPath","moveTo","onMouseUp","onMouseMove","onMouseLeave","htmlFor","type","name","id","value","onChange","e","target","min","max","step","onClick","preventDefault","clearRect","canvas","globalCompositeOperation","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d892f262.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\r\nimport './sketch.css'\r\nimport { MdBrush } from 'react-icons/md'\r\nimport { FaEraser } from 'react-icons/fa'\r\nimport { MdClear } from 'react-icons/md'\r\nimport { MdDownload } from 'react-icons/md'\r\n\r\n\r\n\r\nconst Sketch = () => {\r\n\r\n    const canvasRef = useRef(null)\r\n    const contextRef = useRef(null)\r\n\r\n    const [isDrawing, setIsDrawing] = useState(false)\r\n    const [selectedColor, setSelectedColor] = useState('green')\r\n    const [brushSize, setBrushSize] = useState(5)\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        \r\n        const context = canvas.getContext('2d')\r\n        context.lineCap = 'round'\r\n        context.lineJoin = 'round'\r\n        context.strokeStyle = selectedColor\r\n        context.lineWidth = brushSize\r\n        contextRef.current = context\r\n    }, [selectedColor, brushSize])\r\n    \r\n    const startDrawing = ({ nativeEvent }) => {\r\n        const {offsetX, offsetY} = nativeEvent\r\n        contextRef.current.beginPath()\r\n        contextRef.current.moveTo(offsetX, offsetY)\r\n        setIsDrawing(true)\r\n    }\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath()\r\n        setIsDrawing(false)\r\n    }\r\n\r\n    const draw = ({ nativeEvent }) => {\r\n        if (!isDrawing) {\r\n            return\r\n        }\r\n        const { offsetX, offsetY } = nativeEvent\r\n        contextRef.current.lineTo(offsetX, offsetY)\r\n        contextRef.current.stroke()\r\n    }\r\n\r\n    const clearCanvas = (e) => {\r\n        e.preventDefault()\r\n        contextRef.current.clearRect(0, 0, contextRef.current.canvas.width, contextRef.current.canvas.height)\r\n    }\r\n\r\n    const downloadCanvas = async () => {\r\n        const image = canvasRef.current.toDataURL('image/png');\r\n        const blob = await (await fetch(image)).blob();\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = blobURL;\r\n        link.download = \"image.png\";\r\n        link.click();\r\n    }\r\n\r\n    const erase = (e) => {\r\n        e.preventDefault()\r\n        contextRef.current.globalCompositeOperation = 'destination-out'\r\n        draw()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='screen'>\r\n            <h1>Sketch it your way!</h1>\r\n            \r\n            <canvas\r\n                className='board'\r\n                ref={canvasRef}\r\n                style={{\r\n                    borderRadius: '20px'\r\n                }}\r\n                width = {800}\r\n                height={600}\r\n                onMouseDown={startDrawing}\r\n                onMouseUp={finishDrawing}\r\n                onMouseMove={draw}\r\n                onMouseLeave={finishDrawing}\r\n            />\r\n\r\n            <section className='tools'>\r\n                <form>\r\n                    <label htmlFor=\"paintColor\"></label>\r\n                    <input\r\n                        className='color-picker'\r\n                        type=\"color\"\r\n                        name=\"paintColor\"\r\n                        id=\"paintColor\"\r\n                        value={selectedColor}\r\n                        onChange={(e) => setSelectedColor(e.target.value)}\r\n                    />\r\n                </form>\r\n                <div className='brush'>\r\n                    <span><MdBrush/></span>\r\n                    <input type=\"range\"\r\n                        min=\"1\" max=\"40\"\r\n                        name='pen-range'\r\n                        value={brushSize}\r\n                        className=\"pen-range\"\r\n                        step={1}\r\n                        onChange={(e) => setBrushSize(e.target.value)}/>\r\n                </div>\r\n\r\n                <form className='clear-btn'>\r\n                    <button className='button' id='clear' onClick={clearCanvas}>\r\n                    <span><MdClear/></span>\r\n                        Clear </button>\r\n                </form>\r\n\r\n                <form className='erase-btn'>\r\n                    <button className='button' id='erase' onClick={erase}>\r\n                    <span><FaEraser/></span>\r\n                        Erase </button>\r\n                </form>\r\n                \r\n                <form className='download-btn'>\r\n                    <button className='button' id='download' onClick={downloadCanvas}>\r\n                        <span><MdDownload /></span>Save</button>\r\n                </form>\r\n                \r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Sketch","import React from 'react'\nimport './App.css'\nimport Sketch from './components/sketch/Sketch'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='main'>\n        {/* <Board /> */}\n        <Sketch />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}